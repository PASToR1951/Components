<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recreated Archiving System Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        :root {
            /* Theme Colors */
            --theme-gold: #FDB813; 
            --theme-gold-darker: #EAA10F; 
            --theme-gold-light-bg: rgba(253, 184, 19, 0.2); 
            --theme-gold-lighter-bg: rgba(253, 184, 19, 0.1);
            --theme-gold-highlight: rgba(253, 184, 19, 0.4);

            --theme-green-dark: #006A4E; 
            --theme-green-darker-text: #00523D; 
            --theme-green-light-bg: rgba(0, 106, 78, 0.3); 
            --theme-green-lighter-bg: rgba(0, 106, 78, 0.15);
            --theme-green-border: rgba(0, 106, 78, 0.7); 
            
            /* Layout & Neutral Colors */
            --theme-page-bg: #F9F6EE; 
            --neutral-border-color: #e5e7eb; 
            --input-border-color: #d1d5db; 
            --placeholder-text-color: #9ca3af; 

            /* Text Colors */
            --text-on-gold: #000000; 
            --text-on-green: #FFFFFF; 
            --primary-text-color: #1f2937; 
            --secondary-text-color: #4b5563; 
            --tertiary-text-color: #6b7280; 
            --theme-accent-gray: #6b7280; 

            /* Footer Specific */
            --pastel-gold: #FFF5CC;   
            --pastel-green: #D0EAD0;
            --footer-glass-bg-color: rgba(255, 255, 255, 0.25); 
            --footer-glass-border-color: rgba(255, 255, 255, 0.4); 
            --footer-glass-blur-radius: 6px; 
        }

        html {
            height: 100%; 
        }

        body {
            font-family: 'Inter', sans-serif; 
            background-color: var(--theme-page-bg); 
            background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23D3CBBF' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
            color: var(--primary-text-color); 
            min-height: 100vh; 
            display: flex; 
            flex-direction: column; 
            margin: 0; 
        }

        .page-wrapper {
             flex-grow: 1; 
             padding-top: 2.5rem; 
        }
        @media (min-width: 768px) { 
            .page-wrapper {
                 padding-top: 4rem; 
            }
        }
        
        h1, h2, h3, h4, h5, h6 {
            font-family: 'Inter', sans-serif; 
            color: var(--primary-text-color); 
            font-weight: 600; 
        }
        
        .font-libre { 
            font-family: 'Libre Baskerville', serif;
        }
        .font-inter { 
            font-family: 'Inter', sans-serif;
        }

        .page-header {
            position: relative; 
            overflow: hidden; 
            background-color: var(--theme-green-dark); 
            color: var(--text-on-green); 
            padding-top: 3rem; 
            padding-bottom: 3rem; 
            margin-bottom: 3rem; 
        }

        @keyframes headerGradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .page-header::before {
            content: "";
            position: absolute;
            top: 0; left: 0; right: 0; bottom: 0;
            z-index: 0; 
            background-image: linear-gradient(135deg, 
                rgba(220, 38, 38, 0.25), 
                rgba(253, 184, 19, 0.25), 
                rgba(220, 38, 38, 0.28), 
                rgba(253, 184, 19, 0.28) 
            ); 
            background-size: 400% 400%; 
            animation: headerGradientAnimation 25s ease infinite; 
            opacity: 0.8; 
        }

        .page-header .header-content { 
            position: relative;
            z-index: 1;
        }

        .page-header h1 {
             color: var(--text-on-green); 
             font-weight: 700; 
        }
         .page-header p {
             color: rgba(255, 255, 255, 0.85); 
         }

        .document-item-base {
            transition: transform 0.3s ease, box-shadow 0.3s ease; 
            background-color: rgba(255, 255, 255, 0.75); 
            backdrop-filter: blur(16px) saturate(140%); 
            -webkit-backdrop-filter: blur(16px) saturate(140%);
            border: 1px solid rgba(229, 231, 235, 0.35); 
            border-radius: 0.75rem; 
        }
        .document-item-base:hover {
            transform: translateY(-2px) scale(1.01);
        }

        .btn {
            padding: 0.65rem 1.25rem; 
            border-radius: 0.5rem; 
            font-weight: 500; 
            text-align: center;
            transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, opacity 0.3s ease, transform 0.3s ease, box-shadow 0.2s ease;
            display: inline-flex; 
            align-items: center; 
            justify-content: center; 
            gap: 0.5rem; 
            font-size: 0.9375rem; 
            line-height: 1.375rem; 
            box-shadow: 0 2px 4px rgba(0,0,0,0.05); 
            cursor: pointer; 
        }
        .btn:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transform: translateY(-1px);
        }
        .btn-primary { 
            background-color: var(--theme-green-dark); 
            color: var(--text-on-green); 
            border: 1px solid var(--theme-green-dark); 
        }
        .btn-primary:hover { 
            background-color: var(--theme-green-darker-text); 
            border-color: var(--theme-green-darker-text); 
        }
        .btn-secondary { 
            background-color: var(--theme-gold); 
            color: var(--text-on-gold); 
            border: 1px solid var(--theme-gold); 
        }
        .btn-secondary:hover { 
            background-color: var(--theme-gold-darker); 
            border-color: var(--theme-gold-darker); 
        }
        
        .clickable-meta { 
            cursor: pointer;
            text-decoration: none; 
            color: var(--primary-text-color); 
            opacity: 0.9; 
            margin-right: 0.5rem; 
            display: inline-block; 
        }
        .clickable-meta:hover {
            text-decoration: underline; 
            text-decoration-color: var(--theme-green-dark); 
            color: var(--theme-green-dark);
            opacity: 1;
        }
        .clickable-author:hover { 
             color: var(--theme-green-darker-text); 
             text-decoration-color: var(--theme-green-darker-text);
        }
        .clickable-keyword:hover { 
             color: var(--theme-gold-darker); 
             text-decoration-color: var(--theme-gold-darker);
        }

        .floating-action-container {
            position: fixed;
            bottom: 2rem; 
            left: 50%;
            transform: translateX(-50%);
            z-index: 1000;
            padding: 0.75rem 1rem; 
            background-color: rgba(255, 255, 255, 0.6); 
            backdrop-filter: blur(10px) saturate(180%);
            -webkit-backdrop-filter: blur(10px) saturate(180%);
            border-radius: 0.75rem; 
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0,0,0,0.07); 
            border: 1px solid rgba(229, 231, 235, 0.4); 
            display: flex;
            gap: 0.75rem; 
            transition: opacity 0.3s ease, visibility 0.3s ease; 
            opacity: 1;
            visibility: visible;
        }
        .floating-action-container.hidden { 
             opacity: 0;
             visibility: hidden;
             pointer-events: none; 
        }

        .tag-pill {
            display: inline-block;
            background-color: var(--theme-gold-light-bg);
            color: var(--text-on-gold); 
            padding: 0.3rem 0.8rem; 
            margin-right: 0.5rem; 
            margin-bottom: 0.5rem; 
            border-radius: 0.375rem; 
            font-size: 0.875rem; 
            font-weight: 500; 
            white-space: nowrap; 
            cursor: pointer; 
            transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
            border: 1px solid var(--theme-gold-darker); 
            box-shadow: 0 1px 2px rgba(0,0,0,0.05); 
        }
        .tag-pill:hover {
            background-color: var(--theme-gold); 
            color: var(--text-on-gold); 
            border-color: var(--theme-gold-darker); 
            box-shadow: 0 2px 4px rgba(0,0,0,0.07);
        }

        /* --- Footer Styles --- */
        @keyframes subtleGradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        .footer-wrapper {
            margin-top: auto; 
            width: 100%; 
        }
        .site-footer {
            position: relative; 
            overflow: hidden;   
            background-color: var(--footer-glass-bg-color);
            -webkit-backdrop-filter: blur(var(--footer-glass-blur-radius)); 
            backdrop-filter: blur(var(--footer-glass-blur-radius));
            border-top: 1px solid var(--footer-glass-border-color); 
            box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.08); 
            color: #374151; 
        }
        .site-footer::before { 
            content: "";
            position: absolute;
            top: 0; left: 0; right: 0; bottom: 0;
            z-index: -1; 
            background: linear-gradient(45deg, var(--pastel-gold), var(--pastel-green), var(--pastel-gold));
            background-size: 200% 200%; 
            animation: subtleGradientAnimation 18s ease infinite;
            opacity: 0.7; 
        }
        .footer-content-padding { 
            position: relative; 
            z-index: 1; 
            padding-top: 2rem;    
            padding-bottom: 2rem; 
            padding-left: 1.5rem;   
            padding-right: 1.5rem;  
            max-width: 80rem; 
            margin-left: auto;
            margin-right: auto;
        }
        @media (min-width: 640px) { 
            .footer-content-padding {
                padding-left: 2rem; 
                padding-right: 2rem;
            }
        }
        @media (min-width: 1024px) { 
            .footer-content-padding {
                padding-left: 2.5rem;  
                padding-right: 2.5rem; 
            }
        }
        .footer-link {
            color: var(--theme-green-dark); 
            transition: color 0.2s ease-in-out, opacity 0.2s ease-in-out;
            text-decoration: none;
            font-weight: 500; 
        }
        .footer-link:hover {
            color: var(--theme-gold); 
            opacity: 1; 
        }
        .copyright-text { 
            color: #6b7280; 
        }
        /* --- End Footer Styles --- */

        /* Message Box Styles */
        .message-box-overlay {
            position: fixed;
            inset: 0;
            background-color: rgba(0, 0, 0, 0.5); 
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2000; 
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        .message-box-overlay.visible {
            opacity: 1;
            visibility: visible;
        }
        .message-box-content {
            background-color: white;
            padding: 2rem;
            border-radius: 0.75rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            max-width: 400px;
            text-align: center;
            position: relative;
        }
        .message-box-close-btn {
            position: absolute;
            top: 0.75rem;
            right: 0.75rem;
            background: transparent;
            border: none;
            font-size: 1.5rem;
            line-height: 1;
            cursor: pointer;
            color: #9ca3af; 
        }
        .message-box-close-btn:hover {
            color: #6b7280; 
        }

    </style>
</head>
<body> 
    <div class="page-wrapper"> 
        
        <header class="page-header"> 
            <div class="header-content container mx-auto px-4 sm:px-6 lg:px-8 text-left"> 
                <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold leading-tight mb-2">
                    Lorem ipsum &amp; dolor sit amet &amp;&amp;Heading
                </h1>
                <p class="text-lg sm:text-xl mb-1">Nikolai Bain</p> 
                <p class="text-base sm:text-lg">2021</p> 
            </div>
        </header>

        <div class="container mx-auto px-4 sm:px-6 lg:px-8">

            <div class="document-item-base p-6 sm:p-8 lg:p-10 mb-8"> 
                <section> 
                    <h2 class="text-2xl sm:text-3xl font-bold mb-5 border-b border-[var(--neutral-border-color)] pb-4">Abstract</h2>
                    <p class="text-[var(--secondary-text-color)] leading-relaxed text-justify text-base sm:text-lg mt-4"> 
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare, eros dolor interdum nulla, ut commodo diam libero vitae erat. Aenean faucibus nibh et justo cursus id rutrum lorem imperdiet. Nunc ut sem vitae risus tristique posuere.
                    </p>
                     <div class="mt-6 pt-4 border-t border-[var(--neutral-border-color)] border-opacity-50">
                        <h3 class="text-xl font-bold mb-3">Keywords</h3>
                        <div class="flex flex-wrap">
                            <a href="#" class="tag-pill">Archiving</a>
                            <a href="#" class="tag-pill">Digital Preservation</a>
                            <a href="#" class="tag-pill">Data Management</a>
                            <a href="#" class="tag-pill">Research</a>
                            <a href="#" class="tag-pill">Thesis</a>
                        </div>
                    </div>
                </section>
            </div>

            <div class="document-item-base p-6 sm:p-8 lg:p-10 mb-12"> 
                <section> 
                    <h2 class="text-2xl sm:text-3xl font-bold mb-5 border-b border-[var(--neutral-border-color)] pb-4">Document Information</h2>
                    <div class="grid grid-cols-1 gap-y-6 text-base mt-4"> 
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Title:</strong> 
                            <span class="text-[var(--secondary-text-color)]" id="info-title">Lorem ipsum &amp; dolor sit amet &amp;&amp;</span>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Author(s):</strong>
                            <a href="#" class="clickable-meta clickable-author" id="info-author">Nikolai Bain</a>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Editor(s):</strong>
                            <span class="text-[var(--secondary-text-color)] opacity-90" id="info-editor">John Smith</span>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Publisher:</strong>
                            <span class="text-[var(--secondary-text-color)] opacity-90" id="info-publisher">Archival Press Ltd.</span>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Publication Year:</strong>
                            <span class="text-[var(--secondary-text-color)]" id="info-year">2021</span>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Volume:</strong>
                            <span class="text-[var(--secondary-text-color)]" id="info-volume">2nd Edition</span>
                        </div>
                        <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Number of Pages:</strong>
                            <span class="text-[var(--secondary-text-color)]" id="info-pages">320</span>
                        </div>
                         <div>
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Category:</strong>
                            <span class="text-[var(--secondary-text-color)] opacity-90" id="info-category">Thesis</span>
                        </div>
                         <div> 
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Research Agenda:</strong>
                            <span class="text-[var(--secondary-text-color)] opacity-90" id="info-agenda">Archiving, Digital Preservation, Data Management</span>
                        </div>
                         <div> 
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Scanning Date:</strong>
                            <span class="text-[var(--secondary-text-color)]" id="info-scanning-date">December 10, 2024</span>
                        </div>
                        <div> 
                            <strong class="block mb-1 text-[var(--primary-text-color)] font-medium">Keywords:</strong>
                            <span class="text-[var(--secondary-text-color)]" id="info-keywords">
                                <a href="#" class="clickable-meta clickable-keyword">Archiving</a>, 
                                <a href="#" class="clickable-meta clickable-keyword">Digital Preservation</a>, 
                                <a href="#" class="clickable-meta clickable-keyword">Data Management</a>, 
                                <a href="#" class="clickable-meta clickable-keyword">Research</a>, 
                                <a href="#" class="clickable-meta clickable-keyword">Thesis</a>
                            </span>
                        </div>
                    </div>
                </section>
            </div> 
            
            <div id="floating-buttons" class="floating-action-container">
                <a id="read-doc-btn" href="#" class="btn btn-primary">
                    <i class="fas fa-eye text-s"></i> 
                    Read Document
                </a>
                <a id="read-later-btn" href="#" class="btn btn-secondary">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm.75-13a.75.75 0 0 0-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 0 0 0-1.5h-3.25V5Z" clip-rule="evenodd" />
                    </svg>
                    Read Later
                </a>
            </div>

        </div> 
    </div> 

    <div class="footer-wrapper">
        <footer id="site-footer-element" class="site-footer">
            <div class="footer-content-padding">
                <div class="flex flex-col lg:flex-row justify-between items-center lg:items-start gap-8 text-center lg:text-left">
                    
                    <div class="flex-shrink-0"> 
                        <div class="flex flex-col items-center text-center sm:items-start sm:text-left mb-3">
                            <img class="h-16 w-auto sm:h-20 mb-2 sm:mb-0" 
                                 src="https://placehold.co/200x80/006A4E/FFFFFF?text=PeAS+Logo" 
                                 alt="PeAS Logo"
                                 onerror="this.onerror=null; this.src='https://placehold.co/200x80/cccccc/ffffff?text=Logo+Error';">
                        </div>
                        <p class="text-xs copyright-text">&copy; <span id="footerCurrentYear"></span> PeAS. All Rights Reserved.</p>
                    </div>

                    <nav class="flex flex-col items-center lg:items-start space-y-2 text-sm">
                        <a href="#" class="footer-link">Home</a>
                        <a href="#" class="footer-link">Contact</a>
                        <a href="#" class="footer-link">Terms & Conditions</a>
                        <a href="#" class="footer-link">Privacy Policy</a>
                    </nav>
                </div>
            </div>
        </footer>
    </div>

    <div id="message-box-overlay" class="message-box-overlay">
        <div class="message-box-content">
            <button id="message-box-close" class="message-box-close-btn">&times;</button>
            <p id="message-box-text" class="text-lg text-[var(--primary-text-color)]"></p>
        </div>
    </div>

    <script>
        // Frontend JavaScript 
        document.addEventListener('DOMContentLoaded', () => {
            // Get references to HTML elements 
            const headerTitle = document.querySelector('header h1');
            const headerAuthor = document.querySelector('header p:nth-of-type(1)'); 
            const headerYear = document.querySelector('header p:nth-of-type(2)');  
            
            const abstractCard = document.querySelector('.document-item-base:nth-of-type(1)'); 
            const abstractText = abstractCard ? abstractCard.querySelector('p') : null;
            const abstractKeywordsContainer = abstractCard ? abstractCard.querySelector('.flex.flex-wrap') : null; 

            const infoTitle = document.getElementById('info-title'); 
            const infoAuthorLink = document.getElementById('info-author');
            const infoEditor = document.getElementById('info-editor');
            const infoPublisher = document.getElementById('info-publisher');
            const infoYear = document.getElementById('info-year');
            const infoVolume = document.getElementById('info-volume');
            const infoPages = document.getElementById('info-pages');
            const infoCategory = document.getElementById('info-category');
            const infoAgenda = document.getElementById('info-agenda');
            const infoScanningDate = document.getElementById('info-scanning-date');
            const infoKeywordsContainer = document.getElementById('info-keywords'); 

            const readDocBtn = document.getElementById('read-doc-btn');
            const readLaterBtn = document.getElementById('read-later-btn');
            const messageBoxOverlay = document.getElementById('message-box-overlay');
            const messageBoxText = document.getElementById('message-box-text');
            const messageBoxCloseBtn = document.getElementById('message-box-close');

            // Function to fetch and populate data (Conceptual)
            async function loadDocumentData(docId) {
                try {
                    // Replace with your actual backend URL 
                    const response = await fetch(`http://localhost:8000/api/document/${docId}`); 
                    
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    
                    const data = await response.json();
                    
                    // Populate Header
                    if (headerTitle) headerTitle.textContent = data.title || 'Title Not Found';
                    if (headerAuthor) headerAuthor.textContent = data.author || 'Author Not Found';
                    if (headerYear) headerYear.textContent = data.publication_year || 'Year Not Found';

                    // Populate Abstract & Keywords (Pills)
                    if (abstractText) abstractText.textContent = data.abstract || 'Abstract not available.';
                    if (abstractKeywordsContainer && data.keywords && Array.isArray(data.keywords)) {
                        abstractKeywordsContainer.innerHTML = ''; 
                        data.keywords.forEach(keyword => {
                            const pill = document.createElement('a');
                            pill.href = '#'; 
                            pill.className = 'tag-pill';
                            pill.textContent = keyword;
                            pill.addEventListener('click', (e) => {
                                 e.preventDefault();
                                 searchByKeyword(keyword); 
                            });
                            abstractKeywordsContainer.appendChild(pill);
                        });
                    }

                    // Populate Document Information
                    if (infoTitle) infoTitle.textContent = data.title || '';
                    if (infoAuthorLink) {
                        infoAuthorLink.textContent = data.author || '';
                        infoAuthorLink.href = '#'; 
                        infoAuthorLink.addEventListener('click', (e) => {
                            e.preventDefault();
                            searchByAuthor(data.author); 
                        });
                    }
                    if (infoEditor) infoEditor.textContent = data.editor || 'N/A';
                    if (infoPublisher) infoPublisher.textContent = data.publisher || 'N/A';
                    if (infoYear) infoYear.textContent = data.publication_year || 'N/A';
                    if (infoVolume) infoVolume.textContent = data.volume || 'N/A';
                    if (infoPages) infoPages.textContent = data.pages || 'N/A';
                    if (infoCategory) infoCategory.textContent = data.category || 'N/A';
                    if (infoAgenda) infoAgenda.textContent = data.research_agenda || 'N/A';
                    if (infoScanningDate) infoScanningDate.textContent = data.scanning_date ? new Date(data.scanning_date).toLocaleDateString() : 'N/A';

                    // Populate Keywords (Links) in Document Information
                     if (infoKeywordsContainer && data.keywords && Array.isArray(data.keywords)) {
                        infoKeywordsContainer.innerHTML = ''; 
                        data.keywords.forEach((keyword, index) => {
                            const link = document.createElement('a');
                            link.href = '#'; 
                            link.className = 'clickable-meta clickable-keyword';
                            link.textContent = keyword;
                            link.addEventListener('click', (e) => {
                                 e.preventDefault();
                                 searchByKeyword(keyword); 
                            });
                            infoKeywordsContainer.appendChild(link);
                            if (index < data.keywords.length - 1) {
                                infoKeywordsContainer.appendChild(document.createTextNode(', '));
                            }
                        });
                    }

                } catch (error) {
                    console.error('Error fetching document data:', error);
                    if (abstractText) abstractText.textContent = 'Failed to load document data.';
                }
            }

            // Message Box Functionality 
            function showMessage(message) {
                if (messageBoxText && messageBoxOverlay) {
                    messageBoxText.textContent = message;
                    messageBoxOverlay.classList.add('visible');
                }
            }
            function hideMessage() {
                 if (messageBoxOverlay) {
                    messageBoxOverlay.classList.remove('visible');
                }
            }
            if (messageBoxCloseBtn) messageBoxCloseBtn.addEventListener('click', hideMessage);
            if (messageBoxOverlay) messageBoxOverlay.addEventListener('click', (event) => {
                if (event.target === messageBoxOverlay) hideMessage();
            });

            // Button Event Listeners 
            if (readDocBtn) {
                readDocBtn.addEventListener('click', (event) => {
                    event.preventDefault(); 
                    showMessage('Simulating document opening...'); 
                });
            }
            if (readLaterBtn) {
                readLaterBtn.addEventListener('click', (event) => {
                    event.preventDefault(); 
                    const docId = 1; // Replace with actual logic
                    fetch(`http://localhost:8000/api/read_later/${docId}`, { method: 'POST' }) 
                        .then(response => response.json())
                        .then(data => showMessage(data.message || 'Added to Read Later!'))
                        .catch(error => {
                            console.error('Error adding to read later:', error);
                            showMessage('Error adding to list.');
                        });
                });
            }

            // Placeholder Search Functions 
            function searchByKeyword(keyword) {
                console.log(`Searching for keyword: ${keyword}`);
                showMessage(`Simulating search for keyword: ${keyword}`);
            }
            function searchByAuthor(author) {
                 console.log(`Searching for author: ${author}`);
                showMessage(`Simulating search for author: ${author}`);
            }

            // Initial Load (Example)
            const currentDocumentId = 1; 
            // loadDocumentData(currentDocumentId); // Uncomment this line when backend is ready

            // Footer Intersection Observer 
            const floatingButtons = document.getElementById('floating-buttons');
            const footerElement = document.getElementById('site-footer-element');
            if (floatingButtons && footerElement) {
                const observerOptions = { root: null, rootMargin: '0px', threshold: 0.1 };
                const observerCallback = (entries) => {
                    entries.forEach(entry => {
                        floatingButtons.classList.toggle('hidden', entry.isIntersecting);
                    });
                };
                const observer = new IntersectionObserver(observerCallback, observerOptions);
                observer.observe(footerElement);
            } else {
                console.error("Could not find floating buttons or footer element for Intersection Observer.");
            }

             // Footer Year 
             const yearElement = document.getElementById('footerCurrentYear');
             if (yearElement) {
                 yearElement.textContent = new Date().getFullYear();
             }

        }); // End DOMContentLoaded
    </script>

</body>
</html>
